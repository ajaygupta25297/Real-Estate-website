{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\RealEstateProject\\\\Frontend\\\\src\\\\components\\\\AdminLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Navbar from \"./Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AdminLoginHooks(props) {\n  _s();\n\n  const [adminuserid, setAdminUserId] = useState(\"\");\n  const [adminpassword, setAdminPassword] = useState(\"\");\n  const [msg, setMessage] = useState(\"\");\n\n  const onChangeAdminUserId = e => setAdminUserId(e.target.value);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    console.log(`EMAIL: ${adminuserid}`);\n    console.log(`PASS: ${adminpassword}`);\n\n    if (adminuserid === \"admin\" && adminpassword === \"admin\") {\n      sessionStorage.setItem(\"Key_Veriable\", \"ADMIN\");\n      setMessage(\"WELCOME ADMIN\");\n      props.history.push(\"/adminafterlogin\");\n    } else setMessage(\"INVALID UID OR PASSWORD\");\n\n    setAdminUserId(\"\");\n    setAdminPassword(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"ADMIN LOGIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          style: {\n            color: \"red\"\n          },\n          children: msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: adminuserid,\n            onChange: onChangeAdminUserId,\n            placeholder: \"ADMIN USER ID\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: adminpassword,\n            onChange: e => setAdminPassword(e.target.value),\n            placeholder: \"ADMIN PASSWORD\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"ADMIN LOGIN\",\n            className: \"btn btn-danger\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminLoginHooks, \"UdmtXPeCNvhW73m/ZvkisBXBqwY=\");\n\n_c = AdminLoginHooks;\nexport default AdminLoginHooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminLoginHooks\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/RealEstateProject/Frontend/src/components/AdminLogin.js"],"names":["React","useState","Navbar","AdminLoginHooks","props","adminuserid","setAdminUserId","adminpassword","setAdminPassword","msg","setMessage","onChangeAdminUserId","e","target","value","handleSubmit","evt","preventDefault","console","log","sessionStorage","setItem","history","push","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC9B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACQ,GAAD,EAAMC,UAAN,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMU,mBAAmB,GAAIC,CAAD,IAAON,cAAc,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjD;;AAEA,QAAMC,YAAY,GAAIC,GAAD,IAAS;AAC5BA,IAAAA,GAAG,CAACC,cAAJ;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAa,UAASd,WAAY,EAAlC;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAa,SAAQZ,aAAc,EAAnC;;AAEA,QAAIF,WAAW,KAAK,OAAhB,IAA2BE,aAAa,KAAK,OAAjD,EAA0D;AACxDa,MAAAA,cAAc,CAACC,OAAf,CAAuB,cAAvB,EAAuC,OAAvC;AACAX,MAAAA,UAAU,CAAC,eAAD,CAAV;AACAN,MAAAA,KAAK,CAACkB,OAAN,CAAcC,IAAd,CAAmB,kBAAnB;AACD,KAJD,MAIOb,UAAU,CAAC,yBAAD,CAAV;;AAEPJ,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,GAdD;;AAgBA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,KAAK,EAAC,SAAX;AAAA,6BACE;AAAK,QAAA,KAAK,EAAC,cAAX;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,KAAK,EAAE;AAAEgB,YAAAA,KAAK,EAAE;AAAT,WAAV;AAAA,oBAA6Bf;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAM,UAAA,QAAQ,EAAEM,YAAhB;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,KAAK,EAAEV,WAFT;AAGE,YAAA,QAAQ,EAAEM,mBAHZ;AAIE,YAAA,WAAW,EAAC,eAJd;AAKE,YAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAA;AAAA;AAAA;AAAA,kBARF,eASE;AAAA;AAAA;AAAA;AAAA,kBATF,eAUE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,KAAK,EAAEJ,aAFT;AAGE,YAAA,QAAQ,EAAGK,CAAD,IAAOJ,gBAAgB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAHnC;AAIE,YAAA,WAAW,EAAC,gBAJd;AAKE,YAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,kBAVF,eAiBE;AAAA;AAAA;AAAA;AAAA,kBAjBF,eAkBE;AAAA;AAAA;AAAA;AAAA,kBAlBF,eAmBE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,KAAK,EAAC,aAFR;AAGE,YAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,kBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GA5DQX,e;;KAAAA,e;AA6DT,eAAeA,eAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nfunction AdminLoginHooks(props) {\r\n  const [adminuserid, setAdminUserId] = useState(\"\");\r\n  const [adminpassword, setAdminPassword] = useState(\"\");\r\n  const [msg, setMessage] = useState(\"\");\r\n\r\n  const onChangeAdminUserId = (e) => setAdminUserId(e.target.value);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    console.log(`EMAIL: ${adminuserid}`);\r\n    console.log(`PASS: ${adminpassword}`);\r\n\r\n    if (adminuserid === \"admin\" && adminpassword === \"admin\") {\r\n      sessionStorage.setItem(\"Key_Veriable\", \"ADMIN\");\r\n      setMessage(\"WELCOME ADMIN\");\r\n      props.history.push(\"/adminafterlogin\");\r\n    } else setMessage(\"INVALID UID OR PASSWORD\");\r\n\r\n    setAdminUserId(\"\");\r\n    setAdminPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <br />\r\n      <div class=\"wrapper\">\r\n        <div class=\"form-wrapper\">\r\n          <h3>ADMIN LOGIN</h3>\r\n          <b style={{ color: \"red\" }}>{msg}</b>\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              value={adminuserid}\r\n              onChange={onChangeAdminUserId}\r\n              placeholder=\"ADMIN USER ID\"\r\n              required\r\n            />\r\n            <br />\r\n            <br />\r\n            <input\r\n              type=\"password\"\r\n              value={adminpassword}\r\n              onChange={(e) => setAdminPassword(e.target.value)}\r\n              placeholder=\"ADMIN PASSWORD\"\r\n              required\r\n            />\r\n            <br />\r\n            <br />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"ADMIN LOGIN\"\r\n              className=\"btn btn-danger\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default AdminLoginHooks;\r\n"]},"metadata":{},"sourceType":"module"}